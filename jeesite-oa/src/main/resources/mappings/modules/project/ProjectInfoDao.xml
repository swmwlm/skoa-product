<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.project.dao.ProjectInfoDao">
    
	<sql id="projectInfoColumns">
		a.id AS "id",
		a.office_id AS "office.id",
		a.area_id AS "area.id",
		a.project_name AS "projectName",
		a.project_grade AS "projectGrade",
		a.primary_person AS "primaryPerson.id",
		a.team_members AS "teamMembers",
		a.team_member_names AS "teamMemberNames",
		a.project_team_members AS "projectTeamMembers",
		a.project_team_member_names AS "projectTeamMemberNames",
		a.industry_domain AS "industryDomain",
		a.main_business AS "mainBusiness",
		a.content AS "content",
		a.filepath AS "filepath",
		a.annual_income AS "annualIncome",
		a.annual_net_profit AS "annualNetProfit",
		a.project_progress AS "projectProgress",
		a.start_date AS "startDate",
		a.recommended_man AS "recommendedMan",
		a.recommended_date AS "recommendedDate",
		a.project_type AS "projectType",
		a.intended_money AS "intendedMoney",
		a.project_status AS "projectStatus",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		o2.name AS "office.name",
		o2.PRIMARY_PERSON AS "office.primaryPerson.id",
		o2.DEPUTY_PERSON AS "office.deputyPerson.id",
		a3.name AS "area.name",
		u6.name AS "primaryPerson.name",
		uu.name AS "updateBy.name"
	</sql>
	
	<sql id="projectInfoJoins">
		LEFT JOIN sys_office o2 ON o2.id = a.office_id
		LEFT JOIN sys_area a3 ON a3.id = a.area_id
		LEFT JOIN sys_user u6 ON u6.id = a.primary_person
		LEFT JOIN sys_user uu ON uu.id = a.update_by
	</sql>
    
	<select id="get" resultType="ProjectInfo">
		SELECT 
			<include refid="projectInfoColumns"/>
		FROM project_info a
		<include refid="projectInfoJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ProjectInfo">
		SELECT 
			<include refid="projectInfoColumns"/>
		FROM project_info a
		<include refid="projectInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="office != null and office.id != null and office.id != ''">
				AND a.office_id = #{office.id}
			</if>
			<if test="area != null and area.id != null and area.id != ''">
				AND a.area_id = #{area.id}
			</if>
			<if test="projectName != null and projectName != ''">
				AND a.project_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{projectName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{projectName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{projectName},'%')</if>
			</if>
			<if test="projectGrade != null and projectGrade != ''">
				AND a.project_grade = #{projectGrade}
			</if>
			<if test="primaryPerson != null and primaryPerson.id != null and primaryPerson.id != ''">
				AND (a.primary_person = #{primaryPerson.id} or find_in_set(#{primaryPerson.id},a.team_members))
			</if>
			<if test="createBy != null and createBy.id != null and createBy.id != ''">
				AND a.create_by = #{createBy.id}
			</if>
			<if test="industryDomain != null and industryDomain != ''">
				AND a.industry_domain = #{industryDomain}
			</if>
			<if test="projectProgress != null and projectProgress != ''">
				AND a.project_progress = #{projectProgress}
			</if>
			<if test="projectType != null and projectType != ''">
				AND a.project_type = #{projectType}
			</if>
			<if test="projectStatus != null and projectStatus != ''">
				AND a.project_status = #{projectStatus}
			</if>
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="sqlMap !=null and sqlMap.orderBy != null and sqlMap.orderBy != ''">
				ORDER BY ${sqlMap.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
		<!--<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>-->
	</select>
	
	<select id="findAllList" resultType="ProjectInfo">
		SELECT 
			<include refid="projectInfoColumns"/>
		FROM project_info a
		<include refid="projectInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO project_info(
			id,
			office_id,
			area_id,
			project_name,
			project_grade,
			primary_person,
			team_members,
			team_member_names,
			project_team_members,
			project_team_member_names,
			industry_domain,
			main_business,
			content,
			filepath,
			annual_income,
			annual_net_profit,
			project_progress,
			start_date,
			recommended_man,
			recommended_date,
			project_type,
			intended_money,
			project_status,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{office.id},
			#{area.id},
			#{projectName},
			#{projectGrade},
			#{primaryPerson.id},
			#{teamMembers},
			#{teamMemberNames},
			#{projectTeamMembers},
			#{projectTeamMemberNames},
			#{industryDomain},
			#{mainBusiness},
			#{content},
			#{filepath},
			#{annualIncome},
			#{annualNetProfit},
			#{projectProgress},
			#{startDate},
			#{recommendedMan},
			#{recommendedDate},
			#{projectType},
			#{intendedMoney},
			#{projectStatus},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE project_info SET 	
			office_id = #{office.id},
			area_id = #{area.id},
			project_name = #{projectName},
			project_grade = #{projectGrade},
			primary_person = #{primaryPerson.id},
			team_members = #{teamMembers},
			team_member_names = #{teamMemberNames},
			project_team_members = #{projectTeamMembers},
			project_team_member_names = #{projectTeamMemberNames},
			industry_domain = #{industryDomain},
			main_business = #{mainBusiness},
			content = #{content},
			filepath = #{filepath},
			annual_income = #{annualIncome},
			annual_net_profit = #{annualNetProfit},
			project_progress = #{projectProgress},
			start_date = #{startDate},
			recommended_man = #{recommendedMan},
			recommended_date = #{recommendedDate},
			project_type = #{projectType},
			intended_money = #{intendedMoney},
			project_status = #{projectStatus},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE project_info SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>